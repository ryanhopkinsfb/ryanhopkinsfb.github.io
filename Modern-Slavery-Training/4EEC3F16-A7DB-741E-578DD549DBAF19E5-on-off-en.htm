<!DOCTYPE html> 
<html lang="en">
	<head>
		<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<title>Modern Slavery</title>

		
		
			<script type="text/javascript" src="js/jquery/jquery.js"></script>
			<script type="text/javascript" src="js/jqueryui/jquery-ui.min.js"></script>
			<link href="js/jqueryui/jquery-ui.min.css" rel="stylesheet"/>
			<link href="js/jqueryui/jquery-ui.structure.css" rel="stylesheet"/>
			<link href="js/jqueryui/jquery-ui.theme.css" rel="stylesheet"/>
		
		<script type="text/javascript" src="js/jqueryuiTouchPunch/jquery.ui.touch-punch.min.js"></script>
		<script type="text/javascript" src="js/jquery.flip.js"></script>
		
		<link href="css/fontAwesomePro/css/all.min.css" rel="stylesheet" type="text/css"/>

		<link href="css/fincarta_main.css?nc=91811" rel="stylesheet" type="text/css"/>
		
			<link href="inmarkets/portal/installations/firstgroup/fincarta_client.css?nc=91811" rel="stylesheet" type="text/css"/>
		
				<link rel="stylesheet" href="css/SHARD5.css?nc=91811" type="text/css"/>
			
			<link rel="stylesheet" href="css/moduleSpecific.css?nc=91811" type="text/css"/>
		
				<link rel="stylesheet" href="css/skillcastresp.css?nc=91811" type="text/css" />
			
		<style>
		.modlbl {height:#30}
		</style>

		
		<script type="text/javascript" src="js/skillcast/skillcastrespcore.js?nc=91811"></script>
		<script type="text/javascript" src="js/skillcast/skillcastresp.js?nc=91811"></script>
		<script type="text/javascript" src="js/moduleStructure-en.js?nc=91811" charset="utf-8"></script>
		<script>
			$(document).ready(function(){
				processPageActions({
					hideProgressBar: "N",
					hideMenu: "N",
					resetBookmark: ""
				});
			});
		</script>
		
			<script type="text/javascript" src="js/findApi.js"></script>
		
		
		<link rel="stylesheet" href="js/plyr/plyr.css">
		<script type="text/javascript" src="js/plyr/plyr.polyfilled.js"></script> 
		
		<script type="text/javascript" src="js/spry/widgets/tooltip/SpryTooltip.js"></script>
		<link rel="stylesheet" href="js/spry/widgets/tooltip/SpryTooltip.css" type="text/css" />
		<link href="js/spry/widgets/tabbedpanels/SpryTabbedPanels.css" rel="stylesheet" type="text/css" />
		<style type="text/css">
		.TabbedPanels {
			width: 100%;
		}
		.TabbedPanelsTab {
			font-family: sans-serif;
			font-size: 12px;
			font-weight: bold;
		}
		hr {
			clear: left;
		}
		.TabbedPanels1 {	width: 100%;
		}
		.TabbedPanelsTab1 {	font-family: sans-serif;
			font-size: 12px;
			font-weight: bold;
		}
		</style>
		<script language="JavaScript" type="text/javascript" src="js/spry/widgets/tabbedpanels/SpryTabbedPanels.js"></script>
		<script type="text/javascript" src="js/spry/widgets/slidingpanels/SprySlidingPanels.js"></script>
		<link href="js/spry/widgets/slidingpanels/SprySlidingPanels.css" rel="stylesheet" type="text/css" />
		<script language="JavaScript" type="text/javascript" src="js/spry/widgets/Accordion/SpryAccordion.js"></script>
		<link href="js/spry/widgets/Accordion/SpryAccordion.css" rel="stylesheet" type="text/css" />

		
		<script>
		var thisPageId = "4EEC3F16-A7DB-741E-578DD549DBAF19E5";
		var scr_audio = "on";
		var scr_acc = "off";
		var scr_lang = "en";
		var errorMessage = "Error: The module could not connect to the Learning Management System.<br><br>Please close this window and relaunch the module from the Learning Management System.";
		
			var scormVersion = "1.2";
		
			var useFrameset = false;
		
		var showWarningAfterCommitFails = false;
		var trackScormInteractions = true;
		var alwaysReportBestScore = true;
		var useDescriptionForInteractionId = false;
		var trackScormObjectives = false;
    	var _wq = []; // do not change this it will break wistia embeds
		var scormSurveySubmitEnabled = true;
		banner_status_color = "#ffffff";
		modprg_comp = "#333333";
		modprg_visit = "#999999";
		modprg_pend = "#ffffff";
		showProgress = "yes";
		modlbl_page_no = "Page";
		modlbl_page_of = "of";
		modlbl_q = "Question";
		bgcolor = "";
		mod_nav_layout = "responsive";
		modMenuItemNotAvailableText = "(Not Available)";
		modOpensInNewTab = "Opens in new tab";
		assessmentInProgress = false;
		processTracking();
		$(document).ready(scr_load);
		</script>
	
	
	
		<!--[if lt IE 9]>
		<script>
		var iewidth = document.documentElement.clientWidth || document.body.clientWidth;
		if(iewidth < 1500) {
			if(iewidth >= 1250) {
				$('head').append('<link rel="stylesheet" href="css/skillcastrespie1500.css" type="text/css"/>');
			} else if(iewidth >= 1000) {
				$('head').append('<link rel="stylesheet" href="css/skillcastrespie1250.css" type="text/css"/>');
			} else if(iewidth >= 600) {
				$('head').append('<link rel="stylesheet" href="css/skillcastrespie1000.css" type="text/css"/>');
			} else {
				$('head').append('<link rel="stylesheet" href="css/skillcastrespie800.css" type="text/css"/>');
			}
		}
		</script>
		<![endif]-->			
	

	<script type="text/javascript">
	$(document).ready(function() {
		
			$('#menu-btn').click(function(){
				scr_menu();
			});
			
			$('#menu-label').click(function(){
				scr_menu();
			});
		
	});
	function scr_menu() {
		var toggleThisDiv = $("[id=linkedResourcesListWrapper]");
		var menuButton = $("[id=menu-btn]");
		var linkedResourcesCss = toggleThisDiv.css("display");
		var linkedResourcesButton;
		if(linkedResourcesCss !== "none"){
			toggleThisDiv.hide();
			linkedResourcesButton = $("[id=linkedResources]");
			menuToggle(linkedResourcesButton);
		}
		$('.responsive-menu').toggleClass('expand');
		scr_menuToggle();
	}

	function scr_menuToggle(){
		var menuButton = $("[id=menu-btn]");
		return menuToggle(menuButton);
	}

	function menuToggle(menuButton){
		var currentAriaExpanded = menuButton.attr("aria-expanded");
		var menuButtonAriaExpanded = (currentAriaExpanded == "true") ? "false" : "true";
		menuButton.attr("aria-expanded", menuButtonAriaExpanded);
		if(menuButtonAriaExpanded === "true") {
			$("#closeMenuButton").focus();
		}
		return;
	}

	function scr_breadcrumbHome() {
		SKILLCASTAPI.gotoPage(1);
	}
	function scr_breadcrumbSection() {
		if(thisPageNo > 0) {
			var c = document.getElementById("breadcrumbSectionLabel");
			var i = document.getElementById("breadcrumbSectionIcon");
			var sectionStart = scr_pages[thisPageNo].sectionstart;
			var sectionTitle = scr_pages[sectionStart-1].title;
			i.style.display = "inline-block";
			c.innerText = sectionTitle;
			c.onclick = function() {
				SKILLCASTAPI.gotoPage(sectionStart);
			}
			c.onkeyup = function(e) {
				if(e.keyCode == 13) {
					SKILLCASTAPI.gotoPage(sectionStart);
				}
			}
			i.onclick = function() {
				SKILLCASTAPI.gotoPage(sectionStart);
			}
		}
	}
	$(document).keyup(function(e) {
		if (e.keyCode == 27 && document.getElementById('scr_menu_icon').alt == 'Close menu') {
			scr_menu();
		}
	}); 
	function openPdf(path) {
		pdfWin = window.open(path,"_blank");
	};
	function closeButtonAction() {
		
			closeModule();
		
	}
	</script>

	
			<body id="scr_body" style="">
			
		<div id="contentDiv" style="z-index:1;position:absolute;left:0px;right:0px;width:100%;height:100%;top:0px;bottom:0px;margin:0;text-align:center"><!--
			--><div id="stage_resp" class="stage" style="display:none"><!--
				--><div class="sideNav">
					<a
						id="backBtn"
						href="javascript:previousPage();"
						aria-label="Go to the previous page"
						alt="Go to the previous page"
						style="cursor:pointer;"
					>
						<img src="sp_images/icons/styleA/navArrow_left.png" style="width:50px;border:0" aria-hidden="true" alt="Back Button"/>
					</a>
				</div><!--
				--><div class="stage_inner"><!--
	
		--><div><table role="presentation" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td></td></tr></table></div><!--
	
		--><div id="scr_top_bar" class="banner" role="navigation" style="background-color:#ffffff;"><!--
			--><div class="banner_left" style="text-align:left">
				
					<div style="vertical-align:middle;text-align:left"><!--
						--><div style="display:inline-block;vertical-align:middle;width:40px"><input type="image" id="menu-btn" src="sp_images/icons/styleA/hamburger.png" style="vertical-align:middle;margin-right:5px;border:0;cursor:pointer;" alt="Menu" aria-expanded="false"></div><div id="menutip" class="tooltipContent">Modern Slavery</div><!--
						--><div aria-hidden="true" id="menu-label" style="cursor:pointer; display:inline-block; vertical-align:middle;color:#013374;" class="module-title">Modern Slavery</div><!--
					--></div>
					
						<script type="text/javascript">
						var tt2 = new Spry.Widget.Tooltip("menutip","#menu-btn");
						</script>
					
				<div style="position:relative;left:0px;top:0px;text-align:left">
					<div style="position:absolute;left:0px;top:0px;z-index:99;width:100%;text-align:left">
						
							<div class="responsive-menu" style="position:absolute;left:0px;">
								<table role="presentation" id="hbtable" width="100%" border="0" cellspacing="0" cellpadding="0" style="border-width:1px;border-color:#;border-style:solid;background-color:#ffffff">
								</table>
							</div>
						
					</div>
				</div>
			</div><!--
			--><div class="banner_right" style="text-align:right"><!--
				--><!-- 
					--><div style="display:inline-block;vertical-align:middle;padding-left:2px;padding-right:2px;">
						<input type="image" id="close" style="cursor:pointer;border:0;vertical-align:middle" onclick="javascript:closeButtonAction();" src="sp_images/icons/styleA/btn_return.png" align="absmiddle" alt="Close module"/>
						
							<div id="closetip" class="tooltipContent">Close module</div>
							<script type="text/javascript">
							var tt2 = new Spry.Widget.Tooltip("closetip","#close");
							</script>
						
					</div><!--
				
			--></div><!--
		--></div><!--
		--><div class="topbotNav">
			<a
				id="backBtnTop"
				href="javascript:previousPage();"

				aria-label="Go to the previous page"
				style="cursor:pointer;"
			>
				<img src="sp_images/icons/styleA/navArrow_up.png" style="height:50px;border:0;" aria-hidden="true" />
			</a>
		</div><!--
	
	--><div class="content"><!--

			--> <!--
			--> <!--
		
			--> <!--
			--> <!--
		
			--> <!--
			--> <!--
		
			--> <!--
			--> <!--
		
			--> <!--
			--> <!--
		
			--> <!--
			--> <!--
		
			--> <!--
			--> <!--
		
	--><div id="scr_outer_td" role="main" style="line-height:normal;text-align:left;background-color:#ffffff;"><!--
	
            --><div style="text-align:left;overflow:auto;"  class="title-td"><!--
            		--><h1 class="title-bar">You make the call: Is it suspicious or not?</h1><div class="page-number" id="page-number-container"></div><!--
                --></div><!--
		
		--><div style="text-align:left"><!--

			--><div id="contentinner" class="content_inner"><!--
				
									--><div style="margin:0;padding:0;line-height:0;"><!--
									
							
							--><div id="elem_1353" style="line-height:normal" class="elem_100 elem_text elem_text_width100 "><!--
								--><div id="elem_1353_align"><!--
									--><div id="elem_1353_inner" class="scr_element">
										<table role="presentation" border="0" cellspacing="0" cellpadding="0" width="100%">						
											
<tr>

	<td align="left" valign="top">
	<table role="presentation" width="100%" border="0" cellspacing="0" cellpadding="0" style="table-layout:fixed">
		<tr>
			<td align="left" valign="top" tabindex="0"><div class="mcq-question">You may encounter workers who are victims of modern slavery or human trafficking. Would you recognise the signs?<br />  For each of the following examples, indicate whether it is suspicious or not.</div><div class="user-instruction">Select an option below and then Submit</div></td>
		</tr>
	</table>
	</td>

</tr>

										</table>
									</div><!--
								--></div><!--
							--></div><!--
							
									--></div><!--
									
									--><div style="margin:0;padding:0;line-height:0;"><!--
									
							
							--><div id="elem_1268" style="line-height:normal" class="elem_20 elem_multiq elem_multiq_width20 "><!--
								--><div id="elem_1268_align"><!--
									--><div id="elem_1268_inner" class="scr_element">
										<table role="presentation" border="0" cellspacing="0" cellpadding="0" width="100%">						
											
	<script language="javascript">
	var mcqTickIcon = "sp_images/icons/styleA/mcq_tick.png";
	var mcqCrossIcon = "sp_images/icons/styleA/mcq_cross.png";
	var mcqTickText = "correct";
	var mcqCrossText = "incorrect";
	var modlbl_question_correct = "Correct";
	var modlbl_question_incorrect = "Incorrect";
	var modlbl_question_partial = "";
	var isQ55ExplanationValid = true;
	function addMarkerMCQ(correct){
		var src = mcqCrossIcon;
		var alt = mcqCrossText;
		var image = $("<img/>").addClass("mcqMarkerIcon");
		if(correct){
			src = mcqTickIcon;
			alt = mcqTickText;
		}
		image.prop("src", src)
			.prop("alt", alt);

		return image;
	}
	function renderElement1268() {
		var attempts = 0;
		var selectedOptionId = [];
		q55ExplanationText = $("[id=q55_expText]").html();
		
		
		q55_resp = {};
		q55_resp.attempts = attempts;
		q55_resp.attemptLimit = 1;
		q55_resp.correctCount = 1;
		q55_resp.oneClickShard = false;
		q55_resp.options = [];
		
			var optionId = 1;
			q55_resp.options[0] = {};
			q55_resp.options[0].correct = 1;
			q55_resp.options[0].optionId = optionId;
			q55_resp.options[0].selected = 0;
							for(var i=0;i<selectedOptionId.length;i=i+1) {
								if(selectedOptionId[i] == optionId) {
									q55_resp.options[0].selected = 1;
								}
							}
							document.getElementById("q55_r0").onclick = function() {
								q55_clk(0);
							};
						
			var optionId = 2;
			q55_resp.options[1] = {};
			q55_resp.options[1].correct = 0;
			q55_resp.options[1].optionId = optionId;
			q55_resp.options[1].selected = 0;
							for(var i=0;i<selectedOptionId.length;i=i+1) {
								if(selectedOptionId[i] == optionId) {
									q55_resp.options[1].selected = 1;
								}
							}
							document.getElementById("q55_r1").onclick = function() {
								q55_clk(1);
							};
						
						if(selectedOptionId.length > 0) {
							q55_eval(false);
						}	
	};
	$(document).ready(function() {
		if(!isScrollingSkin()){
			renderElement1268();
		}
	});
	function getDayTime() {
		var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
		var d = new Date();
		return days[d.getDay()] + " " + d.getHours() + ":" + d.getMinutes();
	}

	function q55_clk(itm) {
		if(q55_resp.correctCount == 1) {
			for(var i=0; i<q55_resp.options.length; i=i+1) {
				if(i != itm) {
					document.getElementById("q55_r" + i).className = "assessment-option-border-ready";
					q55_resp.options[i].selected = 0;
				}
			}
			q55_resp.options[itm].selected = 1;
			document.getElementById("q55_sub").style.display = "block";
			document.getElementById("q55_r" + itm).className = "assessment-option-border-selected";
		} else {
			if(q55_resp.options[itm].selected == 1) {
				q55_resp.options[itm].selected = 0;
			} else {
				q55_resp.options[itm].selected = 1;
			}
			var selectCount = 0;
			for(var i=0; i<q55_resp.options.length; i=i+1) {
				if(q55_resp.options[i].selected == 1) {
					selectCount = selectCount + 1;
					document.getElementById("q55_r" + i).className = "assessment-option-border-selected";
				} else {
					document.getElementById("q55_r" + i).className = "assessment-option-border-ready";
				}
			}
			if(selectCount > 0) {
				document.getElementById("q55_sub").style.display = "block";
			} else {
				document.getElementById("q55_sub").style.display = "none";
			}
		}
	}

	function q55_eval(trackResponse) {
		if(typeof trackResponse === "undefined") {
			trackResponse = true;
		}
		var resp = q55_resp;
		var respOptions = resp.options;
		var respOptionsLen = resp.options.length;
		var respOptionsItem, respOptionsItemSelected;
		resp.attempts++;
		var isCorrect = true;
		var correctResponses = 0;
		var incorrectlySelected = 0;
		var respOptionsItemCorrect = 0;
		var itmId = [];
		var itmCorrect = [];
		var correctText = [];
		var responseText =[];
		var result = "correct";
		var resultText = "";
		var correctCount = resp.correctCount;
		var attempts = resp.attempts;
		var attemptLimit = resp.attemptLimit;
		var itm = (correctCount == 1) ? -1 :[];
		var explanationWrap = $("[id=q55_exp]");
		var explanationTextWrap = $("[id=q55_expText]");
		var explanationUpdateText;
		var i = 0;
		var selectedOptions = [];
		var correctOptions = [];
		var wrongOptions = [];
		var replaceOptions = {};
		var replaceOptionKey = "";
		var replaceOption = "";
		var questionIndex = 0;
		var updateExplanation = "";
		var _container, _marker;
		var resultClass = "";
		
		for(i =0; i < respOptionsLen; i++) {
			respOptionsItem = respOptions[i];
			respOptionsItemSelected = respOptionsItem.selected;
			respOptionsItemCorrect = respOptionsItem.correct;

			if(isQ55ExplanationValid){
				questionIndex = i + 1;
				if(respOptionsItemSelected){
					selectedOptions.push(questionIndex);
				}
				if(respOptionsItemCorrect){
					correctOptions.push(questionIndex);
				} else {
					wrongOptions.push(questionIndex);
				}
			}

			if(respOptionsItemSelected == respOptionsItemCorrect) {
				correctResponses = correctResponses + 1;
			} else {
				isCorrect = false;
				if(scormVersion == "2004") {
					result = "incorrect";
				} else {
					result = "wrong";
				}
				if(respOptionsItemSelected == 1) {
					incorrectlySelected = incorrectlySelected + 1;
				}
			}
			if(respOptionsItemSelected == 1) {				
				if(correctCount == 1) {
					itm = i;
				} else {
					itm.push(i);
				}
				itmId[itmId.length] = respOptionsItem.optionId;
				if(scormVersion == "2004") {
					responseText[responseText.length] = $('#q55_r' + i).text().split(",").join(" ").split(" ").join("_").split("\n").join("").trim().substr(0,250);
				}
			}
			if(respOptionsItemCorrect == 1) {
				itmCorrect[itmCorrect.length] = respOptionsItem.optionId;
				if(scormVersion == "2004") {
					correctText[correctText.length] = $('#q55_r' + i).text().split(",").join(" ").split(" ").join("_").split("\n").join("").trim().substr(0,250);
				}
			}
		}
		if(isCorrect || attempts >= attemptLimit) {
			var isCompleted = true;
		} else {
			var isCompleted = false;
		}
		for(i = 0; i < respOptionsLen; i++) {
			respOptionsItem = respOptions[i];
			respOptionsItemSelected = respOptionsItem.selected;
			respOptionsItemCorrect = respOptionsItem.correct;
			if(isCompleted) {
				document.getElementById("q55_r" + i).disabled = true;
				document.getElementById("q55_r" + i).style.cursor = "default";
			}
			if(respOptionsItemSelected == 1) {
				$("#q55_f" + i).css("display","block");
				document.getElementById("q55_r" + i).checked = true;
				var ariaDescribedby;
				var ariaDescribedbyVal = ["q55_question"];
					if (document.getElementById("q55_f" + i)) {
						ariaDescribedbyVal.push("q55_f" + i);
					}
					if (document.getElementById("q55_expText").innerHTML !== "") {
						ariaDescribedbyVal.push("q55_exp");
					}
				ariaDescribedby = ariaDescribedbyVal.join(" ").toString();
				document.getElementById("q55_r" + i).setAttribute("aria-describedby", ariaDescribedby);
				
			} else {
				$("#q55_f" + i).css("display","none");
				document.getElementById("q55_r" + i).checked = false;
			}
			if(isCompleted || correctCount == 1) {
				_container = $("[id=q55_r" + i + "_container]");
				_marker = $("[id=q55_r" + i + "_marker]");
				if(respOptionsItemSelected == respOptionsItemCorrect) {
					if(respOptionsItemCorrect == 1) {
						_container.addClass("assessment-option-border-correct");
						_marker.html(addMarkerMCQ(true));
					} else if(isCompleted) {
						_container.addClass("assessment-option-border-notselected");
						_marker.html(addMarkerMCQ(false));
					}
				} else if(isCompleted) {
					if(respOptionsItemCorrect == 1) {
						_container.addClass("assessment-option-border-notselected");
						_marker.html(addMarkerMCQ(true));
					} else {
						_container.addClass("assessment-option-border-incorrect");
						_marker.html(addMarkerMCQ(false));
					}
				} else if(respOptionsItemSelected == 1) {
					_container.addClass("assessment-option-border-incorrect");
					_marker.html(addMarkerMCQ(false));
				}
			}
		}

		if(isCompleted) {
			if(isQ55ExplanationValid){
				replaceOptions = {
					selectedOptions: selectedOptions,
					correctOptions: correctOptions,
					wrongOptions: wrongOptions	
				};
				updateExplanation = q55ExplanationText;
				correctOptionsLen = replaceOptions.correctOptions.length;
				if(isCorrect) {
					resultClass = "questionCorrect"
					resultText = modlbl_question_correct;
				} else if((correctResponses > 0) && (modlbl_question_partial.length > 0) && (correctOptionsLen > 1)) {
					resultClass = "questionPartial"
					resultText = modlbl_question_partial;
				} else {
					resultClass = "questionIncorrect";
					resultText = modlbl_question_incorrect;
				}
				
				updateExplanation = updateExplanation.replace('[result]', resultText);
				for(replaceOptionKey in replaceOptions){
					replaceOption = SKILLCASTAPI.arrayToNiceList(replaceOptions[replaceOptionKey]);
					updateExplanation = updateExplanation.replace('[' + replaceOptionKey + ']', replaceOption);
				}
				explanationTextWrap.html(updateExplanation);
				explanationWrap.addClass("sc_show").removeClass("sc_hidden");
				if(trackResponse) {
					var explanationTextContent = explanationTextWrap.find(".narrative");
					if(explanationTextContent.length > 0) {
						explanationTextContent.first().attr("tabindex","-1").focus();
					} else {
						explanationWrap.attr("tabindex","-1").focus();
					}
				}
			}
			$("#q55_question").addClass(resultClass);
			document.getElementById("q55_try").style.display = "none";
			$("[id=q55_sub]").find("input").prop("disabled","true");
			self.pageExComp = self.pageExComp + 1;
			if(self.pageExComp >= self.pageEx) {
				document.getElementById("nextButton").style.visibility = "visible";
				if(document.getElementById("nextButtonBot")){
					document.getElementById("nextButtonBot").style.visibility = "visible";
				}
			}
			SKILLCASTAPI.addElement('mcq2',4); SKILLCASTAPI.hideNext();
		} else {
			
			$("html, body").animate({ scrollTop: $("#q55_try").offset().top + $("#q55_try").height()}, "slow");
		}
	}
	</script>
	<tr>
		<td align="left" valign="top">
		<div id="q55_question">
			<div class="mcq-question">Someone who is always dropped off and collected from work and seems afraid</div>

<div><img aria-hidden="true" class="responsive" src="sp_images/client/grc/9288D65A-95C0-71D6-89A7CD05DBA8F17A.jpg" /></div>

		<div>
			
			<fieldset>
			
				<label for="q55_r0">
					<div class="scr_layout_table">
						<div class="scr_layout_row">
							<div class="scr_layout_cell" style="vertical-align:middle;width:20px;text-align:center;">
							
							<script>
								$(document).ready(function(){
									var input = $('#q55_r0');
									var ariaLabel = 'Yes\n';
									var ariaDescribedby = "q55_question";
										input.attr('aria-label', ariaLabel);
										input.attr('aria-describedby', ariaDescribedby);
										input.attr('aria-required', true);
								});
							</script>
								
									<input type="radio" name="q55_options" id="q55_r0"/>
								
							</div>
							<div class="scr_layout_cell" style="vertical-align:middle;">
								<div id="q55_r0_container" class="assessment-option-border-ready" style="cursor:pointer">
									<div class="scr_layout_table">
										<div class="scr_layout_row">
											<div class="scr_layout_cell assessment-option-content">
												<div class="mcq-option">Yes</div>

											</div>
											<div class="scr_layout_cell" id="q55_r0_marker" style="vertical-align:middle;width:20px"></div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</label>
				
				<label for="q55_r1">
					<div class="scr_layout_table">
						<div class="scr_layout_row">
							<div class="scr_layout_cell" style="vertical-align:middle;width:20px;text-align:center;">
							
							<script>
								$(document).ready(function(){
									var input = $('#q55_r1');
									var ariaLabel = 'No\n';
									var ariaDescribedby = "q55_question";
										input.attr('aria-label', ariaLabel);
										input.attr('aria-describedby', ariaDescribedby);
										input.attr('aria-required', true);
								});
							</script>
								
									<input type="radio" name="q55_options" id="q55_r1"/>
								
							</div>
							<div class="scr_layout_cell" style="vertical-align:middle;">
								<div id="q55_r1_container" class="assessment-option-border-ready" style="cursor:pointer">
									<div class="scr_layout_table">
										<div class="scr_layout_row">
											<div class="scr_layout_cell assessment-option-content">
												<div class="mcq-option">No</div>

											</div>
											<div class="scr_layout_cell" id="q55_r1_marker" style="vertical-align:middle;width:20px"></div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</label>
				
			</fieldset>
			
		</div>
		<div id="q55_sub" style="display:none"><input id="q55_sub_but" type="button" onclick="q55_eval()" value="Submit" aria-label="Submit button" aria-describedby="q55_question" class="assessment-submit-button"/></div>
		<div id="q55_exp" class="mcqExpStyle sc_hidden">
			
			<span id="q55_expText"><div class="visually_hidden">You selected option [selectedOptions], the correct option is [correctOptions].</div>
</span>
							
		</div>
		<div id="q55_try" style="display:none"></div>
		</td>
	</tr>

										</table>
									</div><!--
								--></div><!--
							--></div><!--
								
							
							--><div id="elem_1269" style="line-height:normal" class="elem_20 elem_multiq elem_multiq_width20 "><!--
								--><div id="elem_1269_align"><!--
									--><div id="elem_1269_inner" class="scr_element">
										<table role="presentation" border="0" cellspacing="0" cellpadding="0" width="100%">						
											
	<script language="javascript">
	var mcqTickIcon = "sp_images/icons/styleA/mcq_tick.png";
	var mcqCrossIcon = "sp_images/icons/styleA/mcq_cross.png";
	var mcqTickText = "correct";
	var mcqCrossText = "incorrect";
	var modlbl_question_correct = "Correct";
	var modlbl_question_incorrect = "Incorrect";
	var modlbl_question_partial = "";
	var isQ56ExplanationValid = true;
	function addMarkerMCQ(correct){
		var src = mcqCrossIcon;
		var alt = mcqCrossText;
		var image = $("<img/>").addClass("mcqMarkerIcon");
		if(correct){
			src = mcqTickIcon;
			alt = mcqTickText;
		}
		image.prop("src", src)
			.prop("alt", alt);

		return image;
	}
	function renderElement1269() {
		var attempts = 0;
		var selectedOptionId = [];
		q56ExplanationText = $("[id=q56_expText]").html();
		
		
		q56_resp = {};
		q56_resp.attempts = attempts;
		q56_resp.attemptLimit = 1;
		q56_resp.correctCount = 1;
		q56_resp.oneClickShard = false;
		q56_resp.options = [];
		
			var optionId = 1;
			q56_resp.options[0] = {};
			q56_resp.options[0].correct = 1;
			q56_resp.options[0].optionId = optionId;
			q56_resp.options[0].selected = 0;
							for(var i=0;i<selectedOptionId.length;i=i+1) {
								if(selectedOptionId[i] == optionId) {
									q56_resp.options[0].selected = 1;
								}
							}
							document.getElementById("q56_r0").onclick = function() {
								q56_clk(0);
							};
						
			var optionId = 2;
			q56_resp.options[1] = {};
			q56_resp.options[1].correct = 0;
			q56_resp.options[1].optionId = optionId;
			q56_resp.options[1].selected = 0;
							for(var i=0;i<selectedOptionId.length;i=i+1) {
								if(selectedOptionId[i] == optionId) {
									q56_resp.options[1].selected = 1;
								}
							}
							document.getElementById("q56_r1").onclick = function() {
								q56_clk(1);
							};
						
						if(selectedOptionId.length > 0) {
							q56_eval(false);
						}	
	};
	$(document).ready(function() {
		if(!isScrollingSkin()){
			renderElement1269();
		}
	});
	function getDayTime() {
		var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
		var d = new Date();
		return days[d.getDay()] + " " + d.getHours() + ":" + d.getMinutes();
	}

	function q56_clk(itm) {
		if(q56_resp.correctCount == 1) {
			for(var i=0; i<q56_resp.options.length; i=i+1) {
				if(i != itm) {
					document.getElementById("q56_r" + i).className = "assessment-option-border-ready";
					q56_resp.options[i].selected = 0;
				}
			}
			q56_resp.options[itm].selected = 1;
			document.getElementById("q56_sub").style.display = "block";
			document.getElementById("q56_r" + itm).className = "assessment-option-border-selected";
		} else {
			if(q56_resp.options[itm].selected == 1) {
				q56_resp.options[itm].selected = 0;
			} else {
				q56_resp.options[itm].selected = 1;
			}
			var selectCount = 0;
			for(var i=0; i<q56_resp.options.length; i=i+1) {
				if(q56_resp.options[i].selected == 1) {
					selectCount = selectCount + 1;
					document.getElementById("q56_r" + i).className = "assessment-option-border-selected";
				} else {
					document.getElementById("q56_r" + i).className = "assessment-option-border-ready";
				}
			}
			if(selectCount > 0) {
				document.getElementById("q56_sub").style.display = "block";
			} else {
				document.getElementById("q56_sub").style.display = "none";
			}
		}
	}

	function q56_eval(trackResponse) {
		if(typeof trackResponse === "undefined") {
			trackResponse = true;
		}
		var resp = q56_resp;
		var respOptions = resp.options;
		var respOptionsLen = resp.options.length;
		var respOptionsItem, respOptionsItemSelected;
		resp.attempts++;
		var isCorrect = true;
		var correctResponses = 0;
		var incorrectlySelected = 0;
		var respOptionsItemCorrect = 0;
		var itmId = [];
		var itmCorrect = [];
		var correctText = [];
		var responseText =[];
		var result = "correct";
		var resultText = "";
		var correctCount = resp.correctCount;
		var attempts = resp.attempts;
		var attemptLimit = resp.attemptLimit;
		var itm = (correctCount == 1) ? -1 :[];
		var explanationWrap = $("[id=q56_exp]");
		var explanationTextWrap = $("[id=q56_expText]");
		var explanationUpdateText;
		var i = 0;
		var selectedOptions = [];
		var correctOptions = [];
		var wrongOptions = [];
		var replaceOptions = {};
		var replaceOptionKey = "";
		var replaceOption = "";
		var questionIndex = 0;
		var updateExplanation = "";
		var _container, _marker;
		var resultClass = "";
		
		for(i =0; i < respOptionsLen; i++) {
			respOptionsItem = respOptions[i];
			respOptionsItemSelected = respOptionsItem.selected;
			respOptionsItemCorrect = respOptionsItem.correct;

			if(isQ56ExplanationValid){
				questionIndex = i + 1;
				if(respOptionsItemSelected){
					selectedOptions.push(questionIndex);
				}
				if(respOptionsItemCorrect){
					correctOptions.push(questionIndex);
				} else {
					wrongOptions.push(questionIndex);
				}
			}

			if(respOptionsItemSelected == respOptionsItemCorrect) {
				correctResponses = correctResponses + 1;
			} else {
				isCorrect = false;
				if(scormVersion == "2004") {
					result = "incorrect";
				} else {
					result = "wrong";
				}
				if(respOptionsItemSelected == 1) {
					incorrectlySelected = incorrectlySelected + 1;
				}
			}
			if(respOptionsItemSelected == 1) {				
				if(correctCount == 1) {
					itm = i;
				} else {
					itm.push(i);
				}
				itmId[itmId.length] = respOptionsItem.optionId;
				if(scormVersion == "2004") {
					responseText[responseText.length] = $('#q56_r' + i).text().split(",").join(" ").split(" ").join("_").split("\n").join("").trim().substr(0,250);
				}
			}
			if(respOptionsItemCorrect == 1) {
				itmCorrect[itmCorrect.length] = respOptionsItem.optionId;
				if(scormVersion == "2004") {
					correctText[correctText.length] = $('#q56_r' + i).text().split(",").join(" ").split(" ").join("_").split("\n").join("").trim().substr(0,250);
				}
			}
		}
		if(isCorrect || attempts >= attemptLimit) {
			var isCompleted = true;
		} else {
			var isCompleted = false;
		}
		for(i = 0; i < respOptionsLen; i++) {
			respOptionsItem = respOptions[i];
			respOptionsItemSelected = respOptionsItem.selected;
			respOptionsItemCorrect = respOptionsItem.correct;
			if(isCompleted) {
				document.getElementById("q56_r" + i).disabled = true;
				document.getElementById("q56_r" + i).style.cursor = "default";
			}
			if(respOptionsItemSelected == 1) {
				$("#q56_f" + i).css("display","block");
				document.getElementById("q56_r" + i).checked = true;
				var ariaDescribedby;
				var ariaDescribedbyVal = ["q56_question"];
					if (document.getElementById("q56_f" + i)) {
						ariaDescribedbyVal.push("q56_f" + i);
					}
					if (document.getElementById("q56_expText").innerHTML !== "") {
						ariaDescribedbyVal.push("q56_exp");
					}
				ariaDescribedby = ariaDescribedbyVal.join(" ").toString();
				document.getElementById("q56_r" + i).setAttribute("aria-describedby", ariaDescribedby);
				
			} else {
				$("#q56_f" + i).css("display","none");
				document.getElementById("q56_r" + i).checked = false;
			}
			if(isCompleted || correctCount == 1) {
				_container = $("[id=q56_r" + i + "_container]");
				_marker = $("[id=q56_r" + i + "_marker]");
				if(respOptionsItemSelected == respOptionsItemCorrect) {
					if(respOptionsItemCorrect == 1) {
						_container.addClass("assessment-option-border-correct");
						_marker.html(addMarkerMCQ(true));
					} else if(isCompleted) {
						_container.addClass("assessment-option-border-notselected");
						_marker.html(addMarkerMCQ(false));
					}
				} else if(isCompleted) {
					if(respOptionsItemCorrect == 1) {
						_container.addClass("assessment-option-border-notselected");
						_marker.html(addMarkerMCQ(true));
					} else {
						_container.addClass("assessment-option-border-incorrect");
						_marker.html(addMarkerMCQ(false));
					}
				} else if(respOptionsItemSelected == 1) {
					_container.addClass("assessment-option-border-incorrect");
					_marker.html(addMarkerMCQ(false));
				}
			}
		}

		if(isCompleted) {
			if(isQ56ExplanationValid){
				replaceOptions = {
					selectedOptions: selectedOptions,
					correctOptions: correctOptions,
					wrongOptions: wrongOptions	
				};
				updateExplanation = q56ExplanationText;
				correctOptionsLen = replaceOptions.correctOptions.length;
				if(isCorrect) {
					resultClass = "questionCorrect"
					resultText = modlbl_question_correct;
				} else if((correctResponses > 0) && (modlbl_question_partial.length > 0) && (correctOptionsLen > 1)) {
					resultClass = "questionPartial"
					resultText = modlbl_question_partial;
				} else {
					resultClass = "questionIncorrect";
					resultText = modlbl_question_incorrect;
				}
				
				updateExplanation = updateExplanation.replace('[result]', resultText);
				for(replaceOptionKey in replaceOptions){
					replaceOption = SKILLCASTAPI.arrayToNiceList(replaceOptions[replaceOptionKey]);
					updateExplanation = updateExplanation.replace('[' + replaceOptionKey + ']', replaceOption);
				}
				explanationTextWrap.html(updateExplanation);
				explanationWrap.addClass("sc_show").removeClass("sc_hidden");
				if(trackResponse) {
					var explanationTextContent = explanationTextWrap.find(".narrative");
					if(explanationTextContent.length > 0) {
						explanationTextContent.first().attr("tabindex","-1").focus();
					} else {
						explanationWrap.attr("tabindex","-1").focus();
					}
				}
			}
			$("#q56_question").addClass(resultClass);
			document.getElementById("q56_try").style.display = "none";
			$("[id=q56_sub]").find("input").prop("disabled","true");
			self.pageExComp = self.pageExComp + 1;
			if(self.pageExComp >= self.pageEx) {
				document.getElementById("nextButton").style.visibility = "visible";
				if(document.getElementById("nextButtonBot")){
					document.getElementById("nextButtonBot").style.visibility = "visible";
				}
			}
			SKILLCASTAPI.addElement('mcq3',4); SKILLCASTAPI.hideNext();
		} else {
			
			$("html, body").animate({ scrollTop: $("#q56_try").offset().top + $("#q56_try").height()}, "slow");
		}
	}
	</script>
	<tr>
		<td align="left" valign="top">
		<div id="q56_question">
			<div class="mcq-question">Wearing clothing that is unsuitable for the work they are doing</div>

<div><img aria-hidden="true" class="responsive" src="sp_images/client/grc/928FFEB3-EC47-03A8-CC8EAFD385D58536.jpg" /></div>

		<div>
			
			<fieldset>
			
				<label for="q56_r0">
					<div class="scr_layout_table">
						<div class="scr_layout_row">
							<div class="scr_layout_cell" style="vertical-align:middle;width:20px;text-align:center;">
							
							<script>
								$(document).ready(function(){
									var input = $('#q56_r0');
									var ariaLabel = 'Yes\n';
									var ariaDescribedby = "q56_question";
										input.attr('aria-label', ariaLabel);
										input.attr('aria-describedby', ariaDescribedby);
										input.attr('aria-required', true);
								});
							</script>
								
									<input type="radio" name="q56_options" id="q56_r0"/>
								
							</div>
							<div class="scr_layout_cell" style="vertical-align:middle;">
								<div id="q56_r0_container" class="assessment-option-border-ready" style="cursor:pointer">
									<div class="scr_layout_table">
										<div class="scr_layout_row">
											<div class="scr_layout_cell assessment-option-content">
												<div class="mcq-option">Yes</div>

											</div>
											<div class="scr_layout_cell" id="q56_r0_marker" style="vertical-align:middle;width:20px"></div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</label>
				
				<label for="q56_r1">
					<div class="scr_layout_table">
						<div class="scr_layout_row">
							<div class="scr_layout_cell" style="vertical-align:middle;width:20px;text-align:center;">
							
							<script>
								$(document).ready(function(){
									var input = $('#q56_r1');
									var ariaLabel = 'No\n';
									var ariaDescribedby = "q56_question";
										input.attr('aria-label', ariaLabel);
										input.attr('aria-describedby', ariaDescribedby);
										input.attr('aria-required', true);
								});
							</script>
								
									<input type="radio" name="q56_options" id="q56_r1"/>
								
							</div>
							<div class="scr_layout_cell" style="vertical-align:middle;">
								<div id="q56_r1_container" class="assessment-option-border-ready" style="cursor:pointer">
									<div class="scr_layout_table">
										<div class="scr_layout_row">
											<div class="scr_layout_cell assessment-option-content">
												<div class="mcq-option">No</div>

											</div>
											<div class="scr_layout_cell" id="q56_r1_marker" style="vertical-align:middle;width:20px"></div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</label>
				
			</fieldset>
			
		</div>
		<div id="q56_sub" style="display:none"><input id="q56_sub_but" type="button" onclick="q56_eval()" value="Submit" aria-label="Submit button" aria-describedby="q56_question" class="assessment-submit-button"/></div>
		<div id="q56_exp" class="mcqExpStyle sc_hidden">
			
			<span id="q56_expText"><div class="visually_hidden">You selected option [selectedOptions], the correct option is [correctOptions].</div>
</span>
							
		</div>
		<div id="q56_try" style="display:none"></div>
		</td>
	</tr>

										</table>
									</div><!--
								--></div><!--
							--></div><!--
								
							
							--><div id="elem_1270" style="line-height:normal" class="elem_20 elem_multiq elem_multiq_width20 "><!--
								--><div id="elem_1270_align"><!--
									--><div id="elem_1270_inner" class="scr_element">
										<table role="presentation" border="0" cellspacing="0" cellpadding="0" width="100%">						
											
	<script language="javascript">
	var mcqTickIcon = "sp_images/icons/styleA/mcq_tick.png";
	var mcqCrossIcon = "sp_images/icons/styleA/mcq_cross.png";
	var mcqTickText = "correct";
	var mcqCrossText = "incorrect";
	var modlbl_question_correct = "Correct";
	var modlbl_question_incorrect = "Incorrect";
	var modlbl_question_partial = "";
	var isQ57ExplanationValid = true;
	function addMarkerMCQ(correct){
		var src = mcqCrossIcon;
		var alt = mcqCrossText;
		var image = $("<img/>").addClass("mcqMarkerIcon");
		if(correct){
			src = mcqTickIcon;
			alt = mcqTickText;
		}
		image.prop("src", src)
			.prop("alt", alt);

		return image;
	}
	function renderElement1270() {
		var attempts = 0;
		var selectedOptionId = [];
		q57ExplanationText = $("[id=q57_expText]").html();
		
		
		q57_resp = {};
		q57_resp.attempts = attempts;
		q57_resp.attemptLimit = 1;
		q57_resp.correctCount = 1;
		q57_resp.oneClickShard = false;
		q57_resp.options = [];
		
			var optionId = 1;
			q57_resp.options[0] = {};
			q57_resp.options[0].correct = 1;
			q57_resp.options[0].optionId = optionId;
			q57_resp.options[0].selected = 0;
							for(var i=0;i<selectedOptionId.length;i=i+1) {
								if(selectedOptionId[i] == optionId) {
									q57_resp.options[0].selected = 1;
								}
							}
							document.getElementById("q57_r0").onclick = function() {
								q57_clk(0);
							};
						
			var optionId = 2;
			q57_resp.options[1] = {};
			q57_resp.options[1].correct = 0;
			q57_resp.options[1].optionId = optionId;
			q57_resp.options[1].selected = 0;
							for(var i=0;i<selectedOptionId.length;i=i+1) {
								if(selectedOptionId[i] == optionId) {
									q57_resp.options[1].selected = 1;
								}
							}
							document.getElementById("q57_r1").onclick = function() {
								q57_clk(1);
							};
						
						if(selectedOptionId.length > 0) {
							q57_eval(false);
						}	
	};
	$(document).ready(function() {
		if(!isScrollingSkin()){
			renderElement1270();
		}
	});
	function getDayTime() {
		var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
		var d = new Date();
		return days[d.getDay()] + " " + d.getHours() + ":" + d.getMinutes();
	}

	function q57_clk(itm) {
		if(q57_resp.correctCount == 1) {
			for(var i=0; i<q57_resp.options.length; i=i+1) {
				if(i != itm) {
					document.getElementById("q57_r" + i).className = "assessment-option-border-ready";
					q57_resp.options[i].selected = 0;
				}
			}
			q57_resp.options[itm].selected = 1;
			document.getElementById("q57_sub").style.display = "block";
			document.getElementById("q57_r" + itm).className = "assessment-option-border-selected";
		} else {
			if(q57_resp.options[itm].selected == 1) {
				q57_resp.options[itm].selected = 0;
			} else {
				q57_resp.options[itm].selected = 1;
			}
			var selectCount = 0;
			for(var i=0; i<q57_resp.options.length; i=i+1) {
				if(q57_resp.options[i].selected == 1) {
					selectCount = selectCount + 1;
					document.getElementById("q57_r" + i).className = "assessment-option-border-selected";
				} else {
					document.getElementById("q57_r" + i).className = "assessment-option-border-ready";
				}
			}
			if(selectCount > 0) {
				document.getElementById("q57_sub").style.display = "block";
			} else {
				document.getElementById("q57_sub").style.display = "none";
			}
		}
	}

	function q57_eval(trackResponse) {
		if(typeof trackResponse === "undefined") {
			trackResponse = true;
		}
		var resp = q57_resp;
		var respOptions = resp.options;
		var respOptionsLen = resp.options.length;
		var respOptionsItem, respOptionsItemSelected;
		resp.attempts++;
		var isCorrect = true;
		var correctResponses = 0;
		var incorrectlySelected = 0;
		var respOptionsItemCorrect = 0;
		var itmId = [];
		var itmCorrect = [];
		var correctText = [];
		var responseText =[];
		var result = "correct";
		var resultText = "";
		var correctCount = resp.correctCount;
		var attempts = resp.attempts;
		var attemptLimit = resp.attemptLimit;
		var itm = (correctCount == 1) ? -1 :[];
		var explanationWrap = $("[id=q57_exp]");
		var explanationTextWrap = $("[id=q57_expText]");
		var explanationUpdateText;
		var i = 0;
		var selectedOptions = [];
		var correctOptions = [];
		var wrongOptions = [];
		var replaceOptions = {};
		var replaceOptionKey = "";
		var replaceOption = "";
		var questionIndex = 0;
		var updateExplanation = "";
		var _container, _marker;
		var resultClass = "";
		
		for(i =0; i < respOptionsLen; i++) {
			respOptionsItem = respOptions[i];
			respOptionsItemSelected = respOptionsItem.selected;
			respOptionsItemCorrect = respOptionsItem.correct;

			if(isQ57ExplanationValid){
				questionIndex = i + 1;
				if(respOptionsItemSelected){
					selectedOptions.push(questionIndex);
				}
				if(respOptionsItemCorrect){
					correctOptions.push(questionIndex);
				} else {
					wrongOptions.push(questionIndex);
				}
			}

			if(respOptionsItemSelected == respOptionsItemCorrect) {
				correctResponses = correctResponses + 1;
			} else {
				isCorrect = false;
				if(scormVersion == "2004") {
					result = "incorrect";
				} else {
					result = "wrong";
				}
				if(respOptionsItemSelected == 1) {
					incorrectlySelected = incorrectlySelected + 1;
				}
			}
			if(respOptionsItemSelected == 1) {				
				if(correctCount == 1) {
					itm = i;
				} else {
					itm.push(i);
				}
				itmId[itmId.length] = respOptionsItem.optionId;
				if(scormVersion == "2004") {
					responseText[responseText.length] = $('#q57_r' + i).text().split(",").join(" ").split(" ").join("_").split("\n").join("").trim().substr(0,250);
				}
			}
			if(respOptionsItemCorrect == 1) {
				itmCorrect[itmCorrect.length] = respOptionsItem.optionId;
				if(scormVersion == "2004") {
					correctText[correctText.length] = $('#q57_r' + i).text().split(",").join(" ").split(" ").join("_").split("\n").join("").trim().substr(0,250);
				}
			}
		}
		if(isCorrect || attempts >= attemptLimit) {
			var isCompleted = true;
		} else {
			var isCompleted = false;
		}
		for(i = 0; i < respOptionsLen; i++) {
			respOptionsItem = respOptions[i];
			respOptionsItemSelected = respOptionsItem.selected;
			respOptionsItemCorrect = respOptionsItem.correct;
			if(isCompleted) {
				document.getElementById("q57_r" + i).disabled = true;
				document.getElementById("q57_r" + i).style.cursor = "default";
			}
			if(respOptionsItemSelected == 1) {
				$("#q57_f" + i).css("display","block");
				document.getElementById("q57_r" + i).checked = true;
				var ariaDescribedby;
				var ariaDescribedbyVal = ["q57_question"];
					if (document.getElementById("q57_f" + i)) {
						ariaDescribedbyVal.push("q57_f" + i);
					}
					if (document.getElementById("q57_expText").innerHTML !== "") {
						ariaDescribedbyVal.push("q57_exp");
					}
				ariaDescribedby = ariaDescribedbyVal.join(" ").toString();
				document.getElementById("q57_r" + i).setAttribute("aria-describedby", ariaDescribedby);
				
			} else {
				$("#q57_f" + i).css("display","none");
				document.getElementById("q57_r" + i).checked = false;
			}
			if(isCompleted || correctCount == 1) {
				_container = $("[id=q57_r" + i + "_container]");
				_marker = $("[id=q57_r" + i + "_marker]");
				if(respOptionsItemSelected == respOptionsItemCorrect) {
					if(respOptionsItemCorrect == 1) {
						_container.addClass("assessment-option-border-correct");
						_marker.html(addMarkerMCQ(true));
					} else if(isCompleted) {
						_container.addClass("assessment-option-border-notselected");
						_marker.html(addMarkerMCQ(false));
					}
				} else if(isCompleted) {
					if(respOptionsItemCorrect == 1) {
						_container.addClass("assessment-option-border-notselected");
						_marker.html(addMarkerMCQ(true));
					} else {
						_container.addClass("assessment-option-border-incorrect");
						_marker.html(addMarkerMCQ(false));
					}
				} else if(respOptionsItemSelected == 1) {
					_container.addClass("assessment-option-border-incorrect");
					_marker.html(addMarkerMCQ(false));
				}
			}
		}

		if(isCompleted) {
			if(isQ57ExplanationValid){
				replaceOptions = {
					selectedOptions: selectedOptions,
					correctOptions: correctOptions,
					wrongOptions: wrongOptions	
				};
				updateExplanation = q57ExplanationText;
				correctOptionsLen = replaceOptions.correctOptions.length;
				if(isCorrect) {
					resultClass = "questionCorrect"
					resultText = modlbl_question_correct;
				} else if((correctResponses > 0) && (modlbl_question_partial.length > 0) && (correctOptionsLen > 1)) {
					resultClass = "questionPartial"
					resultText = modlbl_question_partial;
				} else {
					resultClass = "questionIncorrect";
					resultText = modlbl_question_incorrect;
				}
				
				updateExplanation = updateExplanation.replace('[result]', resultText);
				for(replaceOptionKey in replaceOptions){
					replaceOption = SKILLCASTAPI.arrayToNiceList(replaceOptions[replaceOptionKey]);
					updateExplanation = updateExplanation.replace('[' + replaceOptionKey + ']', replaceOption);
				}
				explanationTextWrap.html(updateExplanation);
				explanationWrap.addClass("sc_show").removeClass("sc_hidden");
				if(trackResponse) {
					var explanationTextContent = explanationTextWrap.find(".narrative");
					if(explanationTextContent.length > 0) {
						explanationTextContent.first().attr("tabindex","-1").focus();
					} else {
						explanationWrap.attr("tabindex","-1").focus();
					}
				}
			}
			$("#q57_question").addClass(resultClass);
			document.getElementById("q57_try").style.display = "none";
			$("[id=q57_sub]").find("input").prop("disabled","true");
			self.pageExComp = self.pageExComp + 1;
			if(self.pageExComp >= self.pageEx) {
				document.getElementById("nextButton").style.visibility = "visible";
				if(document.getElementById("nextButtonBot")){
					document.getElementById("nextButtonBot").style.visibility = "visible";
				}
			}
			SKILLCASTAPI.addElement('mcq4',4); SKILLCASTAPI.hideNext();
		} else {
			
			$("html, body").animate({ scrollTop: $("#q57_try").offset().top + $("#q57_try").height()}, "slow");
		}
	}
	</script>
	<tr>
		<td align="left" valign="top">
		<div id="q57_question">
			<div class="mcq-question">Having few personal possessions or effects</div>

<div><img aria-hidden="true" class="responsive" src="sp_images/client/grc/92960386-0A4A-27F7-CC53098487C83D1F.jpg" /></div>

		<div>
			
			<fieldset>
			
				<label for="q57_r0">
					<div class="scr_layout_table">
						<div class="scr_layout_row">
							<div class="scr_layout_cell" style="vertical-align:middle;width:20px;text-align:center;">
							
							<script>
								$(document).ready(function(){
									var input = $('#q57_r0');
									var ariaLabel = 'Yes\n';
									var ariaDescribedby = "q57_question";
										input.attr('aria-label', ariaLabel);
										input.attr('aria-describedby', ariaDescribedby);
										input.attr('aria-required', true);
								});
							</script>
								
									<input type="radio" name="q57_options" id="q57_r0"/>
								
							</div>
							<div class="scr_layout_cell" style="vertical-align:middle;">
								<div id="q57_r0_container" class="assessment-option-border-ready" style="cursor:pointer">
									<div class="scr_layout_table">
										<div class="scr_layout_row">
											<div class="scr_layout_cell assessment-option-content">
												<div class="mcq-option">Yes</div>

											</div>
											<div class="scr_layout_cell" id="q57_r0_marker" style="vertical-align:middle;width:20px"></div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</label>
				
				<label for="q57_r1">
					<div class="scr_layout_table">
						<div class="scr_layout_row">
							<div class="scr_layout_cell" style="vertical-align:middle;width:20px;text-align:center;">
							
							<script>
								$(document).ready(function(){
									var input = $('#q57_r1');
									var ariaLabel = 'No\n';
									var ariaDescribedby = "q57_question";
										input.attr('aria-label', ariaLabel);
										input.attr('aria-describedby', ariaDescribedby);
										input.attr('aria-required', true);
								});
							</script>
								
									<input type="radio" name="q57_options" id="q57_r1"/>
								
							</div>
							<div class="scr_layout_cell" style="vertical-align:middle;">
								<div id="q57_r1_container" class="assessment-option-border-ready" style="cursor:pointer">
									<div class="scr_layout_table">
										<div class="scr_layout_row">
											<div class="scr_layout_cell assessment-option-content">
												<div class="mcq-option">No</div>

											</div>
											<div class="scr_layout_cell" id="q57_r1_marker" style="vertical-align:middle;width:20px"></div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</label>
				
			</fieldset>
			
		</div>
		<div id="q57_sub" style="display:none"><input id="q57_sub_but" type="button" onclick="q57_eval()" value="Submit" aria-label="Submit button" aria-describedby="q57_question" class="assessment-submit-button"/></div>
		<div id="q57_exp" class="mcqExpStyle sc_hidden">
			
			<span id="q57_expText"><div class="visually_hidden">You selected option [selectedOptions], the correct option is [correctOptions].</div>
</span>
							
		</div>
		<div id="q57_try" style="display:none"></div>
		</td>
	</tr>

										</table>
									</div><!--
								--></div><!--
							--></div><!--
								
							
							--><div id="elem_1271" style="line-height:normal" class="elem_20 elem_multiq elem_multiq_width20 "><!--
								--><div id="elem_1271_align"><!--
									--><div id="elem_1271_inner" class="scr_element">
										<table role="presentation" border="0" cellspacing="0" cellpadding="0" width="100%">						
											
	<script language="javascript">
	var mcqTickIcon = "sp_images/icons/styleA/mcq_tick.png";
	var mcqCrossIcon = "sp_images/icons/styleA/mcq_cross.png";
	var mcqTickText = "correct";
	var mcqCrossText = "incorrect";
	var modlbl_question_correct = "Correct";
	var modlbl_question_incorrect = "Incorrect";
	var modlbl_question_partial = "";
	var isQ58ExplanationValid = true;
	function addMarkerMCQ(correct){
		var src = mcqCrossIcon;
		var alt = mcqCrossText;
		var image = $("<img/>").addClass("mcqMarkerIcon");
		if(correct){
			src = mcqTickIcon;
			alt = mcqTickText;
		}
		image.prop("src", src)
			.prop("alt", alt);

		return image;
	}
	function renderElement1271() {
		var attempts = 0;
		var selectedOptionId = [];
		q58ExplanationText = $("[id=q58_expText]").html();
		
		
		q58_resp = {};
		q58_resp.attempts = attempts;
		q58_resp.attemptLimit = 1;
		q58_resp.correctCount = 1;
		q58_resp.oneClickShard = false;
		q58_resp.options = [];
		
			var optionId = 1;
			q58_resp.options[0] = {};
			q58_resp.options[0].correct = 0;
			q58_resp.options[0].optionId = optionId;
			q58_resp.options[0].selected = 0;
							for(var i=0;i<selectedOptionId.length;i=i+1) {
								if(selectedOptionId[i] == optionId) {
									q58_resp.options[0].selected = 1;
								}
							}
							document.getElementById("q58_r0").onclick = function() {
								q58_clk(0);
							};
						
			var optionId = 2;
			q58_resp.options[1] = {};
			q58_resp.options[1].correct = 1;
			q58_resp.options[1].optionId = optionId;
			q58_resp.options[1].selected = 0;
							for(var i=0;i<selectedOptionId.length;i=i+1) {
								if(selectedOptionId[i] == optionId) {
									q58_resp.options[1].selected = 1;
								}
							}
							document.getElementById("q58_r1").onclick = function() {
								q58_clk(1);
							};
						
						if(selectedOptionId.length > 0) {
							q58_eval(false);
						}	
	};
	$(document).ready(function() {
		if(!isScrollingSkin()){
			renderElement1271();
		}
	});
	function getDayTime() {
		var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
		var d = new Date();
		return days[d.getDay()] + " " + d.getHours() + ":" + d.getMinutes();
	}

	function q58_clk(itm) {
		if(q58_resp.correctCount == 1) {
			for(var i=0; i<q58_resp.options.length; i=i+1) {
				if(i != itm) {
					document.getElementById("q58_r" + i).className = "assessment-option-border-ready";
					q58_resp.options[i].selected = 0;
				}
			}
			q58_resp.options[itm].selected = 1;
			document.getElementById("q58_sub").style.display = "block";
			document.getElementById("q58_r" + itm).className = "assessment-option-border-selected";
		} else {
			if(q58_resp.options[itm].selected == 1) {
				q58_resp.options[itm].selected = 0;
			} else {
				q58_resp.options[itm].selected = 1;
			}
			var selectCount = 0;
			for(var i=0; i<q58_resp.options.length; i=i+1) {
				if(q58_resp.options[i].selected == 1) {
					selectCount = selectCount + 1;
					document.getElementById("q58_r" + i).className = "assessment-option-border-selected";
				} else {
					document.getElementById("q58_r" + i).className = "assessment-option-border-ready";
				}
			}
			if(selectCount > 0) {
				document.getElementById("q58_sub").style.display = "block";
			} else {
				document.getElementById("q58_sub").style.display = "none";
			}
		}
	}

	function q58_eval(trackResponse) {
		if(typeof trackResponse === "undefined") {
			trackResponse = true;
		}
		var resp = q58_resp;
		var respOptions = resp.options;
		var respOptionsLen = resp.options.length;
		var respOptionsItem, respOptionsItemSelected;
		resp.attempts++;
		var isCorrect = true;
		var correctResponses = 0;
		var incorrectlySelected = 0;
		var respOptionsItemCorrect = 0;
		var itmId = [];
		var itmCorrect = [];
		var correctText = [];
		var responseText =[];
		var result = "correct";
		var resultText = "";
		var correctCount = resp.correctCount;
		var attempts = resp.attempts;
		var attemptLimit = resp.attemptLimit;
		var itm = (correctCount == 1) ? -1 :[];
		var explanationWrap = $("[id=q58_exp]");
		var explanationTextWrap = $("[id=q58_expText]");
		var explanationUpdateText;
		var i = 0;
		var selectedOptions = [];
		var correctOptions = [];
		var wrongOptions = [];
		var replaceOptions = {};
		var replaceOptionKey = "";
		var replaceOption = "";
		var questionIndex = 0;
		var updateExplanation = "";
		var _container, _marker;
		var resultClass = "";
		
		for(i =0; i < respOptionsLen; i++) {
			respOptionsItem = respOptions[i];
			respOptionsItemSelected = respOptionsItem.selected;
			respOptionsItemCorrect = respOptionsItem.correct;

			if(isQ58ExplanationValid){
				questionIndex = i + 1;
				if(respOptionsItemSelected){
					selectedOptions.push(questionIndex);
				}
				if(respOptionsItemCorrect){
					correctOptions.push(questionIndex);
				} else {
					wrongOptions.push(questionIndex);
				}
			}

			if(respOptionsItemSelected == respOptionsItemCorrect) {
				correctResponses = correctResponses + 1;
			} else {
				isCorrect = false;
				if(scormVersion == "2004") {
					result = "incorrect";
				} else {
					result = "wrong";
				}
				if(respOptionsItemSelected == 1) {
					incorrectlySelected = incorrectlySelected + 1;
				}
			}
			if(respOptionsItemSelected == 1) {				
				if(correctCount == 1) {
					itm = i;
				} else {
					itm.push(i);
				}
				itmId[itmId.length] = respOptionsItem.optionId;
				if(scormVersion == "2004") {
					responseText[responseText.length] = $('#q58_r' + i).text().split(",").join(" ").split(" ").join("_").split("\n").join("").trim().substr(0,250);
				}
			}
			if(respOptionsItemCorrect == 1) {
				itmCorrect[itmCorrect.length] = respOptionsItem.optionId;
				if(scormVersion == "2004") {
					correctText[correctText.length] = $('#q58_r' + i).text().split(",").join(" ").split(" ").join("_").split("\n").join("").trim().substr(0,250);
				}
			}
		}
		if(isCorrect || attempts >= attemptLimit) {
			var isCompleted = true;
		} else {
			var isCompleted = false;
		}
		for(i = 0; i < respOptionsLen; i++) {
			respOptionsItem = respOptions[i];
			respOptionsItemSelected = respOptionsItem.selected;
			respOptionsItemCorrect = respOptionsItem.correct;
			if(isCompleted) {
				document.getElementById("q58_r" + i).disabled = true;
				document.getElementById("q58_r" + i).style.cursor = "default";
			}
			if(respOptionsItemSelected == 1) {
				$("#q58_f" + i).css("display","block");
				document.getElementById("q58_r" + i).checked = true;
				var ariaDescribedby;
				var ariaDescribedbyVal = ["q58_question"];
					if (document.getElementById("q58_f" + i)) {
						ariaDescribedbyVal.push("q58_f" + i);
					}
					if (document.getElementById("q58_expText").innerHTML !== "") {
						ariaDescribedbyVal.push("q58_exp");
					}
				ariaDescribedby = ariaDescribedbyVal.join(" ").toString();
				document.getElementById("q58_r" + i).setAttribute("aria-describedby", ariaDescribedby);
				
			} else {
				$("#q58_f" + i).css("display","none");
				document.getElementById("q58_r" + i).checked = false;
			}
			if(isCompleted || correctCount == 1) {
				_container = $("[id=q58_r" + i + "_container]");
				_marker = $("[id=q58_r" + i + "_marker]");
				if(respOptionsItemSelected == respOptionsItemCorrect) {
					if(respOptionsItemCorrect == 1) {
						_container.addClass("assessment-option-border-correct");
						_marker.html(addMarkerMCQ(true));
					} else if(isCompleted) {
						_container.addClass("assessment-option-border-notselected");
						_marker.html(addMarkerMCQ(false));
					}
				} else if(isCompleted) {
					if(respOptionsItemCorrect == 1) {
						_container.addClass("assessment-option-border-notselected");
						_marker.html(addMarkerMCQ(true));
					} else {
						_container.addClass("assessment-option-border-incorrect");
						_marker.html(addMarkerMCQ(false));
					}
				} else if(respOptionsItemSelected == 1) {
					_container.addClass("assessment-option-border-incorrect");
					_marker.html(addMarkerMCQ(false));
				}
			}
		}

		if(isCompleted) {
			if(isQ58ExplanationValid){
				replaceOptions = {
					selectedOptions: selectedOptions,
					correctOptions: correctOptions,
					wrongOptions: wrongOptions	
				};
				updateExplanation = q58ExplanationText;
				correctOptionsLen = replaceOptions.correctOptions.length;
				if(isCorrect) {
					resultClass = "questionCorrect"
					resultText = modlbl_question_correct;
				} else if((correctResponses > 0) && (modlbl_question_partial.length > 0) && (correctOptionsLen > 1)) {
					resultClass = "questionPartial"
					resultText = modlbl_question_partial;
				} else {
					resultClass = "questionIncorrect";
					resultText = modlbl_question_incorrect;
				}
				
				updateExplanation = updateExplanation.replace('[result]', resultText);
				for(replaceOptionKey in replaceOptions){
					replaceOption = SKILLCASTAPI.arrayToNiceList(replaceOptions[replaceOptionKey]);
					updateExplanation = updateExplanation.replace('[' + replaceOptionKey + ']', replaceOption);
				}
				explanationTextWrap.html(updateExplanation);
				explanationWrap.addClass("sc_show").removeClass("sc_hidden");
				if(trackResponse) {
					var explanationTextContent = explanationTextWrap.find(".narrative");
					if(explanationTextContent.length > 0) {
						explanationTextContent.first().attr("tabindex","-1").focus();
					} else {
						explanationWrap.attr("tabindex","-1").focus();
					}
				}
			}
			$("#q58_question").addClass(resultClass);
			document.getElementById("q58_try").style.display = "none";
			$("[id=q58_sub]").find("input").prop("disabled","true");
			self.pageExComp = self.pageExComp + 1;
			if(self.pageExComp >= self.pageEx) {
				document.getElementById("nextButton").style.visibility = "visible";
				if(document.getElementById("nextButtonBot")){
					document.getElementById("nextButtonBot").style.visibility = "visible";
				}
			}
			SKILLCASTAPI.addElement('mcq5',4); SKILLCASTAPI.hideNext();
		} else {
			
			$("html, body").animate({ scrollTop: $("#q58_try").offset().top + $("#q58_try").height()}, "slow");
		}
	}
	</script>
	<tr>
		<td align="left" valign="top">
		<div id="q58_question">
			<div class="mcq-question">Running short of money towards the end of the month</div>

<div><img aria-hidden="true" class="responsive" src="sp_images/client/grc/929E3DE3-E9BB-5D36-F54622907EB93896.jpg" /></div>

		<div>
			
			<fieldset>
			
				<label for="q58_r0">
					<div class="scr_layout_table">
						<div class="scr_layout_row">
							<div class="scr_layout_cell" style="vertical-align:middle;width:20px;text-align:center;">
							
							<script>
								$(document).ready(function(){
									var input = $('#q58_r0');
									var ariaLabel = 'Yes\n';
									var ariaDescribedby = "q58_question";
										input.attr('aria-label', ariaLabel);
										input.attr('aria-describedby', ariaDescribedby);
										input.attr('aria-required', true);
								});
							</script>
								
									<input type="radio" name="q58_options" id="q58_r0"/>
								
							</div>
							<div class="scr_layout_cell" style="vertical-align:middle;">
								<div id="q58_r0_container" class="assessment-option-border-ready" style="cursor:pointer">
									<div class="scr_layout_table">
										<div class="scr_layout_row">
											<div class="scr_layout_cell assessment-option-content">
												<div class="mcq-option">Yes</div>

											</div>
											<div class="scr_layout_cell" id="q58_r0_marker" style="vertical-align:middle;width:20px"></div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</label>
				
				<label for="q58_r1">
					<div class="scr_layout_table">
						<div class="scr_layout_row">
							<div class="scr_layout_cell" style="vertical-align:middle;width:20px;text-align:center;">
							
							<script>
								$(document).ready(function(){
									var input = $('#q58_r1');
									var ariaLabel = 'No\n';
									var ariaDescribedby = "q58_question";
										input.attr('aria-label', ariaLabel);
										input.attr('aria-describedby', ariaDescribedby);
										input.attr('aria-required', true);
								});
							</script>
								
									<input type="radio" name="q58_options" id="q58_r1"/>
								
							</div>
							<div class="scr_layout_cell" style="vertical-align:middle;">
								<div id="q58_r1_container" class="assessment-option-border-ready" style="cursor:pointer">
									<div class="scr_layout_table">
										<div class="scr_layout_row">
											<div class="scr_layout_cell assessment-option-content">
												<div class="mcq-option">No</div>

											</div>
											<div class="scr_layout_cell" id="q58_r1_marker" style="vertical-align:middle;width:20px"></div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</label>
				
			</fieldset>
			
		</div>
		<div id="q58_sub" style="display:none"><input id="q58_sub_but" type="button" onclick="q58_eval()" value="Submit" aria-label="Submit button" aria-describedby="q58_question" class="assessment-submit-button"/></div>
		<div id="q58_exp" class="mcqExpStyle sc_hidden">
			
			<span id="q58_expText"><div class="visually_hidden">You selected option [selectedOptions], the correct option is [correctOptions].</div>
</span>
							
		</div>
		<div id="q58_try" style="display:none"></div>
		</td>
	</tr>

										</table>
									</div><!--
								--></div><!--
							--></div><!--
								
							
							--><div id="elem_1272" style="line-height:normal" class="elem_20 elem_multiq elem_multiq_width20 "><!--
								--><div id="elem_1272_align"><!--
									--><div id="elem_1272_inner" class="scr_element">
										<table role="presentation" border="0" cellspacing="0" cellpadding="0" width="100%">						
											
	<script language="javascript">
	var mcqTickIcon = "sp_images/icons/styleA/mcq_tick.png";
	var mcqCrossIcon = "sp_images/icons/styleA/mcq_cross.png";
	var mcqTickText = "correct";
	var mcqCrossText = "incorrect";
	var modlbl_question_correct = "Correct";
	var modlbl_question_incorrect = "Incorrect";
	var modlbl_question_partial = "";
	var isQ59ExplanationValid = true;
	function addMarkerMCQ(correct){
		var src = mcqCrossIcon;
		var alt = mcqCrossText;
		var image = $("<img/>").addClass("mcqMarkerIcon");
		if(correct){
			src = mcqTickIcon;
			alt = mcqTickText;
		}
		image.prop("src", src)
			.prop("alt", alt);

		return image;
	}
	function renderElement1272() {
		var attempts = 0;
		var selectedOptionId = [];
		q59ExplanationText = $("[id=q59_expText]").html();
		
		
		q59_resp = {};
		q59_resp.attempts = attempts;
		q59_resp.attemptLimit = 1;
		q59_resp.correctCount = 1;
		q59_resp.oneClickShard = false;
		q59_resp.options = [];
		
			var optionId = 1;
			q59_resp.options[0] = {};
			q59_resp.options[0].correct = 1;
			q59_resp.options[0].optionId = optionId;
			q59_resp.options[0].selected = 0;
							for(var i=0;i<selectedOptionId.length;i=i+1) {
								if(selectedOptionId[i] == optionId) {
									q59_resp.options[0].selected = 1;
								}
							}
							document.getElementById("q59_r0").onclick = function() {
								q59_clk(0);
							};
						
			var optionId = 2;
			q59_resp.options[1] = {};
			q59_resp.options[1].correct = 0;
			q59_resp.options[1].optionId = optionId;
			q59_resp.options[1].selected = 0;
							for(var i=0;i<selectedOptionId.length;i=i+1) {
								if(selectedOptionId[i] == optionId) {
									q59_resp.options[1].selected = 1;
								}
							}
							document.getElementById("q59_r1").onclick = function() {
								q59_clk(1);
							};
						
						if(selectedOptionId.length > 0) {
							q59_eval(false);
						}	
	};
	$(document).ready(function() {
		if(!isScrollingSkin()){
			renderElement1272();
		}
	});
	function getDayTime() {
		var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
		var d = new Date();
		return days[d.getDay()] + " " + d.getHours() + ":" + d.getMinutes();
	}

	function q59_clk(itm) {
		if(q59_resp.correctCount == 1) {
			for(var i=0; i<q59_resp.options.length; i=i+1) {
				if(i != itm) {
					document.getElementById("q59_r" + i).className = "assessment-option-border-ready";
					q59_resp.options[i].selected = 0;
				}
			}
			q59_resp.options[itm].selected = 1;
			document.getElementById("q59_sub").style.display = "block";
			document.getElementById("q59_r" + itm).className = "assessment-option-border-selected";
		} else {
			if(q59_resp.options[itm].selected == 1) {
				q59_resp.options[itm].selected = 0;
			} else {
				q59_resp.options[itm].selected = 1;
			}
			var selectCount = 0;
			for(var i=0; i<q59_resp.options.length; i=i+1) {
				if(q59_resp.options[i].selected == 1) {
					selectCount = selectCount + 1;
					document.getElementById("q59_r" + i).className = "assessment-option-border-selected";
				} else {
					document.getElementById("q59_r" + i).className = "assessment-option-border-ready";
				}
			}
			if(selectCount > 0) {
				document.getElementById("q59_sub").style.display = "block";
			} else {
				document.getElementById("q59_sub").style.display = "none";
			}
		}
	}

	function q59_eval(trackResponse) {
		if(typeof trackResponse === "undefined") {
			trackResponse = true;
		}
		var resp = q59_resp;
		var respOptions = resp.options;
		var respOptionsLen = resp.options.length;
		var respOptionsItem, respOptionsItemSelected;
		resp.attempts++;
		var isCorrect = true;
		var correctResponses = 0;
		var incorrectlySelected = 0;
		var respOptionsItemCorrect = 0;
		var itmId = [];
		var itmCorrect = [];
		var correctText = [];
		var responseText =[];
		var result = "correct";
		var resultText = "";
		var correctCount = resp.correctCount;
		var attempts = resp.attempts;
		var attemptLimit = resp.attemptLimit;
		var itm = (correctCount == 1) ? -1 :[];
		var explanationWrap = $("[id=q59_exp]");
		var explanationTextWrap = $("[id=q59_expText]");
		var explanationUpdateText;
		var i = 0;
		var selectedOptions = [];
		var correctOptions = [];
		var wrongOptions = [];
		var replaceOptions = {};
		var replaceOptionKey = "";
		var replaceOption = "";
		var questionIndex = 0;
		var updateExplanation = "";
		var _container, _marker;
		var resultClass = "";
		
		for(i =0; i < respOptionsLen; i++) {
			respOptionsItem = respOptions[i];
			respOptionsItemSelected = respOptionsItem.selected;
			respOptionsItemCorrect = respOptionsItem.correct;

			if(isQ59ExplanationValid){
				questionIndex = i + 1;
				if(respOptionsItemSelected){
					selectedOptions.push(questionIndex);
				}
				if(respOptionsItemCorrect){
					correctOptions.push(questionIndex);
				} else {
					wrongOptions.push(questionIndex);
				}
			}

			if(respOptionsItemSelected == respOptionsItemCorrect) {
				correctResponses = correctResponses + 1;
			} else {
				isCorrect = false;
				if(scormVersion == "2004") {
					result = "incorrect";
				} else {
					result = "wrong";
				}
				if(respOptionsItemSelected == 1) {
					incorrectlySelected = incorrectlySelected + 1;
				}
			}
			if(respOptionsItemSelected == 1) {				
				if(correctCount == 1) {
					itm = i;
				} else {
					itm.push(i);
				}
				itmId[itmId.length] = respOptionsItem.optionId;
				if(scormVersion == "2004") {
					responseText[responseText.length] = $('#q59_r' + i).text().split(",").join(" ").split(" ").join("_").split("\n").join("").trim().substr(0,250);
				}
			}
			if(respOptionsItemCorrect == 1) {
				itmCorrect[itmCorrect.length] = respOptionsItem.optionId;
				if(scormVersion == "2004") {
					correctText[correctText.length] = $('#q59_r' + i).text().split(",").join(" ").split(" ").join("_").split("\n").join("").trim().substr(0,250);
				}
			}
		}
		if(isCorrect || attempts >= attemptLimit) {
			var isCompleted = true;
		} else {
			var isCompleted = false;
		}
		for(i = 0; i < respOptionsLen; i++) {
			respOptionsItem = respOptions[i];
			respOptionsItemSelected = respOptionsItem.selected;
			respOptionsItemCorrect = respOptionsItem.correct;
			if(isCompleted) {
				document.getElementById("q59_r" + i).disabled = true;
				document.getElementById("q59_r" + i).style.cursor = "default";
			}
			if(respOptionsItemSelected == 1) {
				$("#q59_f" + i).css("display","block");
				document.getElementById("q59_r" + i).checked = true;
				var ariaDescribedby;
				var ariaDescribedbyVal = ["q59_question"];
					if (document.getElementById("q59_f" + i)) {
						ariaDescribedbyVal.push("q59_f" + i);
					}
					if (document.getElementById("q59_expText").innerHTML !== "") {
						ariaDescribedbyVal.push("q59_exp");
					}
				ariaDescribedby = ariaDescribedbyVal.join(" ").toString();
				document.getElementById("q59_r" + i).setAttribute("aria-describedby", ariaDescribedby);
				
			} else {
				$("#q59_f" + i).css("display","none");
				document.getElementById("q59_r" + i).checked = false;
			}
			if(isCompleted || correctCount == 1) {
				_container = $("[id=q59_r" + i + "_container]");
				_marker = $("[id=q59_r" + i + "_marker]");
				if(respOptionsItemSelected == respOptionsItemCorrect) {
					if(respOptionsItemCorrect == 1) {
						_container.addClass("assessment-option-border-correct");
						_marker.html(addMarkerMCQ(true));
					} else if(isCompleted) {
						_container.addClass("assessment-option-border-notselected");
						_marker.html(addMarkerMCQ(false));
					}
				} else if(isCompleted) {
					if(respOptionsItemCorrect == 1) {
						_container.addClass("assessment-option-border-notselected");
						_marker.html(addMarkerMCQ(true));
					} else {
						_container.addClass("assessment-option-border-incorrect");
						_marker.html(addMarkerMCQ(false));
					}
				} else if(respOptionsItemSelected == 1) {
					_container.addClass("assessment-option-border-incorrect");
					_marker.html(addMarkerMCQ(false));
				}
			}
		}

		if(isCompleted) {
			if(isQ59ExplanationValid){
				replaceOptions = {
					selectedOptions: selectedOptions,
					correctOptions: correctOptions,
					wrongOptions: wrongOptions	
				};
				updateExplanation = q59ExplanationText;
				correctOptionsLen = replaceOptions.correctOptions.length;
				if(isCorrect) {
					resultClass = "questionCorrect"
					resultText = modlbl_question_correct;
				} else if((correctResponses > 0) && (modlbl_question_partial.length > 0) && (correctOptionsLen > 1)) {
					resultClass = "questionPartial"
					resultText = modlbl_question_partial;
				} else {
					resultClass = "questionIncorrect";
					resultText = modlbl_question_incorrect;
				}
				
				updateExplanation = updateExplanation.replace('[result]', resultText);
				for(replaceOptionKey in replaceOptions){
					replaceOption = SKILLCASTAPI.arrayToNiceList(replaceOptions[replaceOptionKey]);
					updateExplanation = updateExplanation.replace('[' + replaceOptionKey + ']', replaceOption);
				}
				explanationTextWrap.html(updateExplanation);
				explanationWrap.addClass("sc_show").removeClass("sc_hidden");
				if(trackResponse) {
					var explanationTextContent = explanationTextWrap.find(".narrative");
					if(explanationTextContent.length > 0) {
						explanationTextContent.first().attr("tabindex","-1").focus();
					} else {
						explanationWrap.attr("tabindex","-1").focus();
					}
				}
			}
			$("#q59_question").addClass(resultClass);
			document.getElementById("q59_try").style.display = "none";
			$("[id=q59_sub]").find("input").prop("disabled","true");
			self.pageExComp = self.pageExComp + 1;
			if(self.pageExComp >= self.pageEx) {
				document.getElementById("nextButton").style.visibility = "visible";
				if(document.getElementById("nextButtonBot")){
					document.getElementById("nextButtonBot").style.visibility = "visible";
				}
			}
			SKILLCASTAPI.addElement('explanation',4); hideNext();  setTimeout(function() { SKILLCASTAPI.showNext(); },1000);
		} else {
			
			$("html, body").animate({ scrollTop: $("#q59_try").offset().top + $("#q59_try").height()}, "slow");
		}
	}
	</script>
	<tr>
		<td align="left" valign="top">
		<div id="q59_question">
			<div class="mcq-question">Having no knowledge of where they live or other basic information</div>

<div><img aria-hidden="true" class="responsive" src="sp_images/client/grc/92A65FBA-C10D-50E7-2EE01DEC960ABE3D.jpg" /></div>

		<div>
			
			<fieldset>
			
				<label for="q59_r0">
					<div class="scr_layout_table">
						<div class="scr_layout_row">
							<div class="scr_layout_cell" style="vertical-align:middle;width:20px;text-align:center;">
							
							<script>
								$(document).ready(function(){
									var input = $('#q59_r0');
									var ariaLabel = 'Yes\n';
									var ariaDescribedby = "q59_question";
										input.attr('aria-label', ariaLabel);
										input.attr('aria-describedby', ariaDescribedby);
										input.attr('aria-required', true);
								});
							</script>
								
									<input type="radio" name="q59_options" id="q59_r0"/>
								
							</div>
							<div class="scr_layout_cell" style="vertical-align:middle;">
								<div id="q59_r0_container" class="assessment-option-border-ready" style="cursor:pointer">
									<div class="scr_layout_table">
										<div class="scr_layout_row">
											<div class="scr_layout_cell assessment-option-content">
												<div class="mcq-option">Yes</div>

											</div>
											<div class="scr_layout_cell" id="q59_r0_marker" style="vertical-align:middle;width:20px"></div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</label>
				
				<label for="q59_r1">
					<div class="scr_layout_table">
						<div class="scr_layout_row">
							<div class="scr_layout_cell" style="vertical-align:middle;width:20px;text-align:center;">
							
							<script>
								$(document).ready(function(){
									var input = $('#q59_r1');
									var ariaLabel = 'No\n';
									var ariaDescribedby = "q59_question";
										input.attr('aria-label', ariaLabel);
										input.attr('aria-describedby', ariaDescribedby);
										input.attr('aria-required', true);
								});
							</script>
								
									<input type="radio" name="q59_options" id="q59_r1"/>
								
							</div>
							<div class="scr_layout_cell" style="vertical-align:middle;">
								<div id="q59_r1_container" class="assessment-option-border-ready" style="cursor:pointer">
									<div class="scr_layout_table">
										<div class="scr_layout_row">
											<div class="scr_layout_cell assessment-option-content">
												<div class="mcq-option">No</div>

											</div>
											<div class="scr_layout_cell" id="q59_r1_marker" style="vertical-align:middle;width:20px"></div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</label>
				
			</fieldset>
			
		</div>
		<div id="q59_sub" style="display:none"><input id="q59_sub_but" type="button" onclick="q59_eval()" value="Submit" aria-label="Submit button" aria-describedby="q59_question" class="assessment-submit-button"/></div>
		<div id="q59_exp" class="mcqExpStyle sc_hidden">
			
			<span id="q59_expText"><div class="visually_hidden">You selected option [selectedOptions], the correct option is [correctOptions].</div>
</span>
							
		</div>
		<div id="q59_try" style="display:none"></div>
		</td>
	</tr>

										</table>
									</div><!--
								--></div><!--
							--></div><!--
								
							
							--><div id="elem_1354" style="line-height:normal" class="elem_100 elem_text elem_text_width100 "><!--
								--><div id="elem_1354_align"><!--
									--><div id="elem_1354_inner" class="scr_element">
										<table role="presentation" border="0" cellspacing="0" cellpadding="0" width="100%">						
											
<tr>

	<td align="left" valign="top">
	<table role="presentation" width="100%" border="0" cellspacing="0" cellpadding="0" style="table-layout:fixed">
		<tr>
			<td align="left" valign="top" tabindex="0"><div class="mcq-explanation">There may be various signs that suggest that someone is a victim of modern slavery or human trafficking, but this will often require further investigation. However, your role is to witness and report, and not to investigate, as this may put victims at greater risk. If you have any concerns, inform your line manager or your local HR team, or report them via our confidential reporting hotline.</div>
</td>
		</tr>
	</table>
	</td>

</tr>

										</table>
									</div><!--
								--></div><!--
							--></div><!--
							
	--></div><!--

--></div><!--
		--></div><!--
	--></div><!--
--></div><!--

				--><div id="scr_progress_outer" style="text-align:left;background-color:#ffffff">
					
						<table role="presentation" width="100%" border="0" cellspacing="0" cellpadding="0" style="table-layout:fixed;margin:0">
							<tr id="progress-bar-container">
							</tr>
						</table>
						<div id="progress-tip-container"></div>
						
							<div id="page-number-container-acc" style="font-size:0!important"></div>
						
				</div><!--
			
			--><div class="topbotNav">
				<a 
					id="nextButtonBot"
					href="javascript:nextPage();"
					aria-label="Go to the next page"
					style="cursor:pointer;visibility:hidden;"
				>
					<img src="sp_images/icons/styleA/navArrow_down.png" style="height:50px;border:0;" alt="next button" aria-hidden="true"/>
				</a>
      	</div><!--
			
		--></div><!--
	--><div class="sideNav">
		<a
			id="nextButton"
			href="javascript:nextPage();"
			aria-label="Go to the next page"
			alt="Go to the next page"
			style="cursor:pointer;visibility:hidden;"
		>
			<img src="sp_images/icons/styleA/navArrow_right.png" style="width:50px;border:0;" alt="next button" aria-hidden="true"/>
		</a>
    </div><!--
	
	--></div><!--
--></div>

<script>

var hasPageLoaded = false;
function scr_init_page() {
	hasPageLoaded = true;
	setTimeout(function() {
		var focusDiv = $("#scr_top_bar");
		if(typeof parent !== "undefined") {
			if(typeof parent.pageVisited !== "undefined") {
				var focusDiv = $("#scr_outer_td");
			}
			parent.pageVisited = true;
		}
		focusDiv.attr("tabindex","-1").focus();
	},0);
	if(scormVersion != "moodle") {
		forceCommit();
	};
	
		document.getElementById("stage_resp").style.display = "table";
	
	if(thisPageNo + 1 >= scr_pages.length) {
		$("[id=nextButtonBot], [id=nextButton]").css('visibility', 'hidden');
	}
	
}


function scr_init_hasPageLoaded() {
	if(!hasPageLoaded){
		scr_init_page();
	}
}

var hasPageGotWistiaVideos = (Array.isArray(_wq) && _wq.length > 0);
if(hasPageGotWistiaVideos){
	$(document).ready(function(){
		setTimeout(scr_init_hasPageLoaded, 5000);
	});
}

$(window).on("load", scr_init_hasPageLoaded);




$(window).keyup(function (e) {
   var code = (e.keyCode ? e.keyCode : e.which);
   if (code == 9) {
		var s = document.createElement("style");
		s.innerText = "*:focus {outline:1px solid #000099}";
		document.getElementsByTagName("head")[0].appendChild(s); 
	}
});

</script>
<!--

--><script type="text/javascript" src="4EEC3F16-A7DB-741E-578DD549DBAF19E5-off.js"></script>
<link href="4EEC3F16-A7DB-741E-578DD549DBAF19E5-off.css" rel="stylesheet"/><!--